#!/bin/bash

# Copyright (C) 2020, Marek Gagolewski, https://www.gagolewski.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.



set -e

if [ ! -f "${1}" ]; then
    echo "knit2md Copyright (C) 2020, Marek Gagolewski, https://www.gagolewski.com"
    echo "input file does not exist or no input provided"
    echo "usage: knit2md infile [outfile]"
    exit 1
fi

keepsources=false

mimeinput=`mimetype -b "${1}"`

if [ $mimeinput == "text/x-r-markdown" ]; then
    figuresdir="${1/%.Rmd/}-figures"

    knitrfile="${1/%.Rmd/}-tmp-md.Rmd"
    mdfile="${1/%.Rmd/}-tmp-md.md"

    if [ -z "${2}" ]; then
        outfile="${1/%.Rmd/.md}"
    else
        outfile="${2}"
    fi


    echo "Compiling ${1} → ${outfile}..."

    rm -f "${knitrfile}"
    rm -f "${mdfile}"
    #rm -f "${outfile}"
    mkdir -p "${figuresdir}"
    rm -f "{$figuresdir}/*"


    echo "\`\`\`{r,echo=FALSE}" > "${knitrfile}"
    cat /home/gagolews/bin/knit2md-options.R >> "${knitrfile}"
    echo "\`\`\`" >> "${knitrfile}"
    echo "" >> "${knitrfile}"
    cat "${1}" >> "${knitrfile}"
    #sed -e 's@^---$@<p></p>@g' "${1}" >> "${knitrfile}"


    Rscript --vanilla -e "\
        library('knitr');                              \
        opts_knit\$set(progress=FALSE, verbose=TRUE); \
        opts_chunk\$set(
            fig.path='${figuresdir}/'     \
        );                                             \
        knit('${knitrfile}', '${mdfile}')
    "
else
    exit 1
fi



# strip pwd from image paths like ](....
Rscript --vanilla -e "\
    library('stringi'); \
    f <- stri_replace_first_fixed(readLines('${mdfile}'), '](`pwd`/', ']('); \
    writeLines(f, '${outfile}');
"


rm -f "${knitrfile}"
rm -f "${mdfile}"

echo "Finished compiling ${1} → ${outfile}. OK."
