#!/bin/bash

# Copyright (C) 2020, Marek Gagolewski, https://www.gagolewski.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.



set -e

if [ ! -f "${1}" ]; then
    echo "knit2pdf Copyright (C) 2020, Marek Gagolewski, https://www.gagolewski.com"
    echo "input file does not exist or no input provided"
    echo "usage: knit2pdf infile [outfile]"
    exit 1
fi

keepsources=false

mimeinput=`mimetype -b "${1}"`

if [ -z "${2}" ]; then
    outfile="${1/%.Rmd/.pdf}"
else
    outfile="${2}"
fi
tmpdir="${1/%.pdf/}-tmp-pdf"
knitrfile="${1/%.pdf/}-tmp-pdf.Rmd"
mdfile="${1/%.pdf/}-tmp-pdf.md"

#rm -f "${outfile}"
rm -f "${mdfile/%.md/.tex}"
rm -f "${mdfile}"

echo "Compiling ${1} → ${outfile}..."

if [ $mimeinput == "text/x-r-markdown" ]; then
    mkdir -p "${tmpdir}"
    rm -f "${knitrfile}"

    echo "\`\`\`{r,echo=FALSE}" > "${knitrfile}"
    cat /home/gagolews/bin/knit2pdf-options.R >> "${knitrfile}"
    echo "\`\`\`" >> "${knitrfile}"
    echo "" >> "${knitrfile}"
    cat "${1}" >> "${knitrfile}"
    #sed -e 's@^---$@<p></p>@g' "${1}" >> "${knitrfile}"


    Rscript -e "\
        library('knitr');                              \
        opts_knit\$set(progress=FALSE, verbose=TRUE); \
        opts_chunk\$set(                               \
            cache.path='${tmpdir}/cache/',    \
            fig.path='${tmpdir}/figures/'     \
        );                                             \
        knit('${knitrfile}', '${mdfile}')
    "
else
    cp "${1}" "${mdfile}"
fi




pandoc +RTS -K512m -RTS \
    "${mdfile}" \
    --output "${mdfile/%.md/.tex}" \
    --from markdown+autolink_bare_uris+tex_math_single_backslash+tex_math_dollars+smart-implicit_figures \
    --to latex \
    --highlight-style tango \
    --default-image-extension .pdf \
    --email-obfuscation none \
    --pdf-engine pdflatex \
    --self-contained \
    --number-sections \
    --section-divs \
    --table-of-contents \
    --toc-depth 2 \
    --top-level-division=section

pdflatex -interaction=batchmode "${mdfile/%.md/.tex}" || \
        echo "!!!!!! ERROR COMPILING FILE !!!!!!" && \
        cat "${mdfile/%.md/.log}" | grep -A 10 -e "^!" && \
        rm -f "${mdfile/%.md/.tex}" && \
        exit 1

pdflatex -interaction=batchmode "${mdfile/%.md/.tex}"

mv "${mdfile/%.md/.pdf}" "${outfile}"


rm -f "${mdfile/%.md/.aux}" "${mdfile/%.md/.log}" "${mdfile/%.md/.nav}" \
      "${mdfile/%.md/.out}" "${mdfile/%.md/.snm}" "${mdfile/%.md/.toc}" \
      "${mdfile/%.md/.vrb}"



if [ "$keepsources" = false ]; then
    if [ $mimeinput == "text/x-r-markdown" ]; then
        rm -f "${knitrfile}"
        rm -f "${mdfile/%.md/.tex}"
        rm -f "${mdfile}"

        if [ -z "$(ls -A ${tmpdir})" ]; then
            # if tmpdir empty
            rmdir "$tmpdir"
        fi
    else
        rm -f "${mdfile/%.md/.tex}"
        rm -f "${mdfile}"
    fi
fi

echo "Finished compiling ${1} → ${outfile}. OK."
